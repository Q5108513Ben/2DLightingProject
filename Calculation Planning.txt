The data we have:

	Light
		2D Position on Screen
		Height Value

	Fragment
		2D Position on Screen
		Height Value converted to Pixels
		Normal Vector

	
	The y axis could represent the depth into the scene i.e. the z value.
	If the object has a height this would have to be subtracted from the y value.
	The y value would be replaced with the height value.
	This would essentially convert our 2D positions into psuedo-3D positions.

	We can then subtract the 3D positions from each other to find the direction
	of the light hitting the pixel.

	We now have the direction of the light as well as the normal vector of the 
	pixel we are shading. These two direction vectors can be used to calculate
	the cosine angle between them.

	cos0 = (direction_vector . normal_vector) / (direction_vector_magnitude * normal_vector_magnitude)

	- Find the dot product of the vectors. 		dot()
	- Find the magnitude of each vector. 		length()
	- Multiply the two magnitudes.	
	- Divide the dot product by the result.

	This gives us cos0. A value between -1 and 1 that represents the similarity between 
	the two directions. Where 1 is an angle of 0, so the directions are the same; and 
	-1 is an angle of 180, so the directions are opposite.


	